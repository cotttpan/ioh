export { getIn, hasIn, setIn, updateIn, deleteIn };
declare function getIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8], K10 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8][K9]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9, K10]): O[K1][K2][K3][K4][K5][K6][K7][K8][K9][K10];
declare function getIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9]): O[K1][K2][K3][K4][K5][K6][K7][K8][K9];
declare function getIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8]): O[K1][K2][K3][K4][K5][K6][K7][K8];
declare function getIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7]): O[K1][K2][K3][K4][K5][K6][K7];
declare function getIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5]>(src: O, path: string | [K1, K2, K3, K4, K5, K6]): O[K1][K2][K3][K4][K5][K6];
declare function getIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4]>(src: O, path: string | [K1, K2, K3, K4, K5]): O[K1][K2][K3][K4][K5];
declare function getIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3]>(src: O, path: string | [K1, K2, K3, K4]): O[K1][K2][K3][K4];
declare function getIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2]>(src: O, path: string | [K1, K2, K3]): O[K1][K2][K3];
declare function getIn<O, K1 extends keyof O, K2 extends keyof O[K1]>(src: O, path: string | [K1, K2]): O[K1][K2];
declare function getIn<O, K1 extends keyof O>(src: O, path: string | [K1]): O[K1];
declare function getIn<O, K1 extends keyof O>(src: O, path: string | K1): O[K1];
declare function hasIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8], K10 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8][K9]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9, K10]): O[K1][K2][K3][K4][K5][K6][K7][K8][K9][K10];
declare function hasIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9]): O[K1][K2][K3][K4][K5][K6][K7][K8][K9];
declare function hasIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8]): O[K1][K2][K3][K4][K5][K6][K7][K8];
declare function hasIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7]): O[K1][K2][K3][K4][K5][K6][K7];
declare function hasIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5]>(src: O, path: string | [K1, K2, K3, K4, K5, K6]): O[K1][K2][K3][K4][K5][K6];
declare function hasIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4]>(src: O, path: string | [K1, K2, K3, K4, K5]): O[K1][K2][K3][K4][K5];
declare function hasIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3]>(src: O, path: string | [K1, K2, K3, K4]): O[K1][K2][K3][K4];
declare function hasIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2]>(src: O, path: string | [K1, K2, K3]): O[K1][K2][K3];
declare function hasIn<O, K1 extends keyof O, K2 extends keyof O[K1]>(src: O, path: string | [K1, K2]): O[K1][K2];
declare function hasIn<O, K1 extends keyof O>(src: O, path: string | [K1]): O[K1];
declare function hasIn<O, K1 extends keyof O>(src: O, path: string | K1): O[K1];
declare function setIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8], K10 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8][K9], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9, K10], value: V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, Record<K7, Record<K8, Record<K9, Record<K10, V>>>>>>>>>>;
declare function setIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9], value: V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, Record<K7, Record<K8, Record<K9, V>>>>>>>>>;
declare function setIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8], value: V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, Record<K7, Record<K8, V>>>>>>>>;
declare function setIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7], value: V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, Record<K7, V>>>>>>>;
declare function setIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6], value: V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, V>>>>>>;
declare function setIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], V>(src: O, path: string | [K1, K2, K3, K4, K5], value: V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, V>>>>>;
declare function setIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], V>(src: O, path: string | [K1, K2, K3, K4], value: V): O & Record<K1, Record<K2, Record<K3, Record<K4, V>>>>;
declare function setIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], V>(src: O, path: string | [K1, K2, K3], value: V): O & Record<K1, Record<K2, Record<K3, V>>>;
declare function setIn<O, K1 extends keyof O, K2 extends keyof O[K1], V>(src: O, path: string | [K1, K2], value: V): O & Record<K1, Record<K2, V>>;
declare function setIn<O, K1 extends keyof O, V>(src: O, path: string | [K1], value: V): O & Record<K1, V>;
declare function setIn<O, K1 extends keyof O, V>(src: O, path: string | K1, value: V): O & Record<K1, V>;
declare function updateIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8], K10 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8][K9], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9, K10], updater: (v: O[K1][K2][K3][K4][K5][K6][K7][K8][K9][K10]) => V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, Record<K7, Record<K8, Record<K9, Record<K10, V>>>>>>>>>>;
declare function updateIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9], updater: (v: O[K1][K2][K3][K4][K5][K6][K7][K8][K9]) => V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, Record<K7, Record<K8, Record<K9, V>>>>>>>>>;
declare function updateIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8], updater: (v: O[K1][K2][K3][K4][K5][K6][K7][K8]) => V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, Record<K7, Record<K8, V>>>>>>>>;
declare function updateIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7], updater: (v: O[K1][K2][K3][K4][K5][K6][K7]) => V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, Record<K7, V>>>>>>>;
declare function updateIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], V>(src: O, path: string | [K1, K2, K3, K4, K5, K6], updater: (v: O[K1][K2][K3][K4][K5][K6]) => V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, Record<K6, V>>>>>>;
declare function updateIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], V>(src: O, path: string | [K1, K2, K3, K4, K5], updater: (v: O[K1][K2][K3][K4][K5]) => V): O & Record<K1, Record<K2, Record<K3, Record<K4, Record<K5, V>>>>>;
declare function updateIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], V>(src: O, path: string | [K1, K2, K3, K4], updater: (v: O[K1][K2][K3][K4]) => V): O & Record<K1, Record<K2, Record<K3, Record<K4, V>>>>;
declare function updateIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], V>(src: O, path: string | [K1, K2, K3], updater: (v: O[K1][K2][K3]) => V): O & Record<K1, Record<K2, Record<K3, V>>>;
declare function updateIn<O, K1 extends keyof O, K2 extends keyof O[K1], V>(src: O, path: string | [K1, K2], updater: (v: O[K1][K2]) => V): O & Record<K1, Record<K2, V>>;
declare function updateIn<O, K1 extends keyof O, V>(src: O, path: string | [K1], updater: (v: O[K1]) => V): O & Record<K1, V>;
declare function deleteIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8], K10 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8][K9]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9, K10]): O[K1][K2][K3][K4][K5][K6][K7][K8][K9][K10];
declare function deleteIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7], K9 extends keyof O[K1][K2][K3][K4][K5][K6][K7][K8]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8, K9]): O[K1][K2][K3][K4][K5][K6][K7][K8][K9];
declare function deleteIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6], K8 extends keyof O[K1][K2][K3][K4][K5][K6][K7]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7, K8]): O[K1][K2][K3][K4][K5][K6][K7][K8];
declare function deleteIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5], K7 extends keyof O[K1][K2][K3][K4][K5][K6]>(src: O, path: string | [K1, K2, K3, K4, K5, K6, K7]): O[K1][K2][K3][K4][K5][K6][K7];
declare function deleteIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4], K6 extends keyof O[K1][K2][K3][K4][K5]>(src: O, path: string | [K1, K2, K3, K4, K5, K6]): O[K1][K2][K3][K4][K5][K6];
declare function deleteIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3], K5 extends keyof O[K1][K2][K3][K4]>(src: O, path: string | [K1, K2, K3, K4, K5]): O[K1][K2][K3][K4][K5];
declare function deleteIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2], K4 extends keyof O[K1][K2][K3]>(src: O, path: string | [K1, K2, K3, K4]): O[K1][K2][K3][K4];
declare function deleteIn<O, K1 extends keyof O, K2 extends keyof O[K1], K3 extends keyof O[K1][K2]>(src: O, path: string | [K1, K2, K3]): O[K1][K2][K3];
declare function deleteIn<O, K1 extends keyof O, K2 extends keyof O[K1]>(src: O, path: string | [K1, K2]): O[K1][K2];
declare function deleteIn<O, K1 extends keyof O>(src: O, path: string | [K1]): O[K1];
declare function deleteIn<O, K1 extends keyof O>(src: O, path: string | K1): O[K1];
